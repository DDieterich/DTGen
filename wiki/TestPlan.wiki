#summary Test Plan

 = Functional Testing =
  # == Augmented Schema Functionality ==
    # Natural Key Update-able Views
      # INSERT with/without Primary Key
      # INSERT with/without EFF_START_DTM
      # INSERT with Foreign Key *(*Primary Key *OR* Natural Key(s) *OR* PK Full Path *OR* NK Full Path*)*
      # UPDATE with/without EFF_START_DTM
      # UPDATE with Foreign Key *(*Primary Key *OR* Natural Key(s) *OR* PK Full Path *OR* NK Full Path*)*
      # DELETE
    # Automatic Indexes
      # Foreign Keys
      # Natural Keys
    # Enforced Case Folding
      # UPPER
      # LOWER
      # INITCAP
    # Full Procedural APIs for each Entity
      # INSERT using *(*Column List *OR* Table Record *OR* View Record*)*
      # INSERT with/without Primary Key
      # INSERT with/without EFF_START_DTM
      # INSERT with Foreign Key *(*Primary Key *OR* Natural Key(s) *OR* PK Full Path *OR* NK Full Path*)*
      # UPDATE using *(*Column List *OR* Table Record *OR* View Record*)*
      # UPDATE with/without EFF_START_DTM
      # UPDATE with nkdata_provided_in *(*TRUE *OR* FALSE*)*
      # UPDATE with Foreign Key *(*Primary Key *OR* Natural Key(s) *OR* PK Full Path *OR* NK Full Path*)*
      # DELETE with/without EFF_END_DTM
    # Full Path Hierarchical Data
      # Primary Key Full Path
      # Natural Key Full Path
    # Calculated PCTFREE
      # Datatype storage size
      # Default PCTFREE for required columns
      # Default PCTFREE for non-required columns
    # Entity Based History and Audit
      # Optional Effectivity
      # Point-in-Time *_ASOF_* View
    # Audited *_POP_* Function
      # Pop Deleted Record
      # Replace an Active Record
      # Pop Active Record
    # Integrity Enforcement on Direct Table DML (Must occur on Database Server)
      # INSERT with/without Primary Key
      # INSERT with/without EFF_START_DTM
      # UPDATE with/without EFF_START_DTM
      # DELETE
  # == Cross-Cutting Concerns ==
    # Lock Helper for Global Single Threaded Logic
    # Debug Logging using Autonomous Transaction
    # Error Logging using Autonomous Transaction
    # Long Operations Tracking
    # Self-Reporting Version Number
  # == Source code Generation Specifics ==
    # Copyright in File Header
    # Always over-writes previous file
    # Database object compilation results reporting
  # == Default Maintenance User Interface ==
    # Data Domain Filterable Grid Edit
    # Generated PL/SQL for CLOB DML
    # Comprehensive *_OMNI_* View Forms
    # GUI Query-able Reporting
      # *_ASOF_*
      # *_OMNI_*
  # == Fundamental Database Features ==
    # Datatype Support
      # NUMBER
      # VARCHAR2
      # VARCHAR2(4001) conversion to CLOB
      # DATE
      # TIMESTAMP WITH TIME ZONE
      # TIMESTAMP WITH LOCAL TIME ZONE
    # Not NULL Column Constraints
    # Custom Table Check Constraints
      # Enforced Discrete Domains (no FK)
      # =, !=, ^=, <>, >, <, >=, <= (Equality/Inequality test)
      # ANY, SOME, ANY (List Comparisons)
      # NOT, AND, OR (Logical Conditions)
      # LIKE, REGEXP_LIKE (Pattern Matching)
      # IS NULL, IS NOT NULL (NULL Conditions)
      # (, ) (Compound Conditions)
      # BETWEEN, EXISTS, IN (Misc. Conditions)
    # Custom Indexes
      # UNIQUE
      # Non-UNIQUE
    # Comment Generation
      # Column Comments
      # Table Comments
      # View Comments
    # Tablespace Storage
      # Application Default Tablespace for ACTIVE tables
      # Application Default Tablespace for History/Audit tables
      # Application Default Tablespace for ACTIVE indexes
      # Application Default Tablespace for History/Audit indexes
      # Entity Specific Tablespace for ACTIVE tables
      # Entity Specific Tablespace for History/Audit tables
      # Entity Specific Tablespace for ACTIVE indexes
      # Entity Specific Tablespace for History/Audit indexes

 = Global Deployment Options =
|| || *Table Trig/Cons* || *DB Integrity* || *Case Correction* || *Ignore No Change* ||
|| A || No || No || No || No ||
|| B || Yes || No || No || No ||
|| C || No || Yes || No || No ||
|| D || Yes || Yes || No || No ||
|| E || No || No || Yes || No ||
|| F || Yes || No || Yes || No ||
|| G || No || Yes || Yes || No ||
|| H || Yes || Yes || Yes || No ||
|| I || No || No || No || Yes ||
|| J || Yes || No || No || Yes ||
|| K || No || Yes || No || Yes ||
|| L || Yes || Yes || No || Yes ||
|| M || No || No || Yes || Yes ||
|| N || Yes || No || Yes || Yes ||
|| O || No || Yes || Yes || Yes ||
|| P || Yes || Yes || Yes || Yes ||

Note: All testing will occur with both Database server and Mid-Tier server configured and running to allow for all testing to occur on both Database server and Mid-Tier server.

Note: All testing will occur with a non-schema user loaded and running to allow for all testing to occur on both schema access and non-schema user access


 = Boundary Condition Testing =
|| *Condition Name* || *Below* || *Lowest* || *Highest* || *Above* ||
|| Number of Tables || 0 || 1 || 200 || 201 ||
|| Number of Columns in a Table || 0 || 1 || 99 || 100 ||
|| Number of Natural Key Columns || 0 || 1 || 99 || 100 ||
|| NUMBER Datatype Length || 0 || 1 || 38 || 39 ||
|| NUMBER Datatype Scale || 0 || 1 || 38 || 39 ||
|| VARCHAR2 Datatype Length || 0 || 1 || 32768 || 32769 ||
|| TIMESTAMP WITH TIME ZONE Datatype Length || 0 || 1 || 10 || 10 ||
|| TIMESTAMP WITH LOCAL TIME ZONE Datatype Length || 0 || 1 || 10 || 10 ||