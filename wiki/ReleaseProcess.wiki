#summary Release Process

= Introduction =

The DTGen release is complicated by the fact that DTGen is used to generate DTGen. The starting point for this circular process is the scripts used to create DTGen in the database. Accordingly, the source for DTGen are these scripts.

The DTGen release process follows "Common Branching Patterns" best practices from "Version Control with Subversion" (http://svnbook.red-bean.com/en/1.7/svn-book.html#svn.branchmerge.commonpatterns).

= Integration Testing =

Integration testing covers 4 environments.

  * InstallPackage - Installation log file comparison
  * SmallOffice Deployment - Feature Set Unit Testing
  * ThreeTier Deployment - Feature Set Unit Testing
  * PerfFocus Deployment - Feature Set Unit Testing

= Integration Test Process =

  * Reset test environment
  * Load from "src" (glob, integ, mods, ods, oltp, comp)
  * Load "GEN" data and generate
  * Create and test InstallPackage
  * Load "TST" data and generate
  * Create and test SmallOffice environment
  * Create and test ThreeTier environment
  * Create and test PerfFocus environment

= Feature Set Unit Testing =

Unit testing is performed based on the following feature sets

  * Natural Key Update-able Views
  * Configurable Multi-Tier Deployments
  * Sequences and Surrogate Primary Keys (PK)
  * Indexed Foreign Keys (FK) and Natural Keys (NK)
  * Custom Check Constraints
  * Enforced Discrete Domains (no FK)
  * Enforced Case Folding
  * Full Procedural APIs for each Entity
  * Full Path Hierarchical Data (PK and NK)
  * Default Maintenance User Interface (APEX)
  * Includes Data Domain Filterable Grid Edit (APEX)
  * Includes Generated PL/SQL for CLOB DML (APEX)
  * Entity Based History and Audit
  * Point-in-Time ASOF Views
  * Audited POP Functions
  * Comprehensive OMNI Views
  * Query-able ASOF and OMNI Reporting