
http://www.filehippo.com/download_tortoisesvn/5617/#summary Release Process

= Introduction =

The DTGen release is complicated by the fact that DTGen is used to generate DTGen. The starting point for this circular process is the scripts used to create DTGen in the database. Accordingly, the source for DTGen are these scripts.

The DTGen release process follows "Common Branching Patterns" best practices from "Version Control with Subversion" (http://svnbook.red-bean.com/en/1.7/svn-book.html#svn.branchmerge.commonpatterns).

= SVN Version Information =

SQL*Developer 3.1.07 Uses SVN/Kit 1.3.2<br>
SVN/Kit 1.3.2 Uses SVN Client 1.6.2

Note: The latest TortoiseSVN Release uses SVN client 1.7<br>
SVN Client 1.7 is not compatible with SVN Client 1.6

A compatible version of TortoiseSVN can be downloaded at<br>
http://www.filehippo.com/download_tortoisesvn/5617/

= Integration Testing =

Integration testing covers 4 environments.  The InstallPackage environment is a basic install of DTGEN.  The integration testing for this environment is a simple installation log file comparison with a known good installation file.  The other environments (SmallOffice, ThreeTier, and PerfFocus) are potential deployment environments from applications generated with DTGen.  The integration testing for these environments consists of feature set UnitTesting and APEX GUI integration testing.  The complete set of unit tests is run during release to assist in pin-pointing specific problems with the release.  APEX GUI testing is the most complete, end-to-end integration testing of DTGen.

= Release Test Procedure =

  * Reset test environment
  * Load from "src" (glob, integ, mods, ods, oltp, comp)
  * Load "GEN" data and generate
  * Create and test InstallPackage
  * Load "TST" data and generate
  * Create and test SmallOffice environment
  * Create and test ThreeTier environment
  * Create and test PerfFocus environment

= Release Procedure =

{{{
  * Update "ver" in "generate" package body and compile
  * Login to APEX
     * Applications
     * Run DTGen Application
        * Login to DTGen Application
        * Select Application "DTGEN"
        * GoTo "FILES"
        * Generate All Files
        * Update Assembled Scripts
        * Download "dtgen_dataload.ctl" to "supp" directory
        * Download "install_db.sql" to "src" directory
        * Logout from DTGen Application
        * Application 900
     * Edit Application Properties
        * Update Version Number
        * Apply Changes
     * Export/Import
     * Export
        * Application: 900 DTGen
        * File Format: DOS
        * Owner Override: (empty)
        * Build Status Override: Run and Build Application
        * Debugging: Yes
        * AsOf: (empty)
        * Export Supporting Object Definitions:    Yes
        * Export Public Interactive Reports:       Yes
        * Export Private Interactive Reports:      No
        * Export Interactive Report Subscriptions: No
        * Export Developer Comments:               Yes
        * Export Application
        * Download "f900.sql" to "src" directory
     * Logout from APEX
  * Commit changes to Subversion
  * Create a Release "branch" from "trunk" in Subversion
  * Export the Release "branch" directory from Subversion
  * ZIP the export
  * Name the ZIP file with the current version
  * Upload to http://code.google.com/p/dtgen/downloads/list
     -) Type-Archive
     -) OpSys-Windows?
}}}